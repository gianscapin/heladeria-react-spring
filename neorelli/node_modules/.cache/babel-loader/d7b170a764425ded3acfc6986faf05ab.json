{"ast":null,"code":"var _jsxFileName = \"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Ventas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ventas = () => {\n  _s();\n\n  const [employeesList, saveList] = useState([]);\n\n  const listSales = () => {\n    const url = \"http://localhost:8080/venta/ventasPorEmpleado\";\n    axios.get(url).then(res => saveList(res.data)).catch(error => console.log(error));\n  };\n\n  const bestEmployee = () => {\n    let empleado = {\n      nombre: '',\n      cantidad: ''\n    };\n    let cantidadEmpleado = 0;\n    let nombreEmpleado = \"\";\n    employeesList.forEach(employee => {\n      if (employee.cantidad > cantidadEmpleado) {\n        nombreEmpleado = employee.empleado;\n        cantidadEmpleado = employee.cantidad;\n      }\n    });\n    return nombreEmpleado;\n  };\n\n  useEffect(() => {\n    listSales();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Ventas por empleado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre del empleado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantidad vendida\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employeesList.length > 1 ? employeesList.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.empleado\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.cantidad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, employee.empleado, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"No hay datos por ahora.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), employeesList.length > 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"El empleado con m\\xE1s ventas es: \", bestEmployee()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Ventas, \"x6X9jkjP0C53eJwVrbwVSWUNJx8=\");\n\n_c = Ventas;\nexport default Ventas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ventas\");","map":{"version":3,"sources":["/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Ventas.jsx"],"names":["React","useEffect","useState","axios","Table","Ventas","employeesList","saveList","listSales","url","get","then","res","data","catch","error","console","log","bestEmployee","empleado","nombre","cantidad","cantidadEmpleado","nombreEmpleado","forEach","employee","textAlign","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,aAAD,EAAgBC,QAAhB,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACpB,UAAMC,GAAG,GAAG,+CAAZ;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAUD,GAAV,EACCE,IADD,CACMC,GAAG,IAAIL,QAAQ,CAACK,GAAG,CAACC,IAAL,CADrB,EAECC,KAFD,CAEOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFhB;AAGH,GALD;;AAOA,QAAMG,YAAY,GAAG,MAAM;AACvB,QAAIC,QAAQ,GAAE;AACVC,MAAAA,MAAM,EAAC,EADG;AAEVC,MAAAA,QAAQ,EAAC;AAFC,KAAd;AAIA,QAAIC,gBAAgB,GAAG,CAAvB;AACA,QAAIC,cAAc,GAAG,EAArB;AACAjB,IAAAA,aAAa,CAACkB,OAAd,CAAsBC,QAAQ,IAAE;AAC5B,UAAGA,QAAQ,CAACJ,QAAT,GAAkBC,gBAArB,EAAsC;AAClCC,QAAAA,cAAc,GAAGE,QAAQ,CAACN,QAA1B;AACAG,QAAAA,gBAAgB,GAAGG,QAAQ,CAACJ,QAA5B;AACH;AACJ,KALD;AAOA,WAAOE,cAAP;AACH,GAfD;;AAiBAtB,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,SAAS;AACZ,GAFQ,EAEP,EAFO,CAAT;AAKA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACkB,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACI;AAAA,+BACI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKpB,aAAa,CAACqB,MAAd,GAAqB,CAArB,GAAwBrB,aAAa,CAACsB,GAAd,CAAkBH,QAAQ,iBAC/C;AAAA,kCACI;AAAA,sBAAKA,QAAQ,CAACN;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKM,QAAQ,CAACJ;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAASI,QAAQ,CAACN,QAAlB;AAAA;AAAA;AAAA;AAAA,gBADqB,CAAxB,gBAKE;AAAA,iCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AANP;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAmBKb,aAAa,CAACqB,MAAd,GAAqB,CAArB,gBACG;AAAA,uDAAoCT,YAAY,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAGA,IAtBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5DD;;GAAMb,M;;KAAAA,M;AA8DN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\n\nconst Ventas = () => {\n\n    const [employeesList, saveList] = useState([]);\n\n    const listSales = () => {\n        const url = \"http://localhost:8080/venta/ventasPorEmpleado\";\n        axios.get(url)\n        .then(res => saveList(res.data))\n        .catch(error => console.log(error));\n    }\n\n    const bestEmployee = () => {\n        let empleado ={\n            nombre:'',\n            cantidad:''\n        }\n        let cantidadEmpleado = 0;\n        let nombreEmpleado = \"\";\n        employeesList.forEach(employee=>{\n            if(employee.cantidad>cantidadEmpleado){\n                nombreEmpleado = employee.empleado;\n                cantidadEmpleado = employee.cantidad;\n            }\n        })\n\n        return nombreEmpleado;\n    }\n\n    useEffect(()=>{\n        listSales();\n    },[])\n\n\n    return ( \n        <React.Fragment>\n            <h2 style={{textAlign:\"center\"}}>Ventas por empleado</h2>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>Nombre del empleado</th>\n                    <th>Cantidad vendida</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {employeesList.length>1? employeesList.map(employee => (\n                        <tr key={employee.empleado}>\n                            <td>{employee.empleado}</td>\n                            <td>{employee.cantidad}</td>\n                        </tr>\n                    )):<tr><td>No hay datos por ahora.</td></tr>}\n                </tbody>\n            </Table>\n\n            {employeesList.length>1?(\n                <h3>El empleado con m√°s ventas es: {bestEmployee()}</h3>\n            )\n            :null\n            }\n        </React.Fragment>\n     );\n}\n \nexport default Ventas;"]},"metadata":{},"sourceType":"module"}