[{"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/index.js":"1","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/reportWebVitals.js":"2","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/App.js":"3","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Navegation.jsx":"4","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Body/Body.jsx":"5","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Body/CardProduct.jsx":"6","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Helados/Cono.jsx":"7","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Spinner/Spinner.jsx":"8","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Helados/Cuarto.jsx":"9","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Helados/Kilo.jsx":"10","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Ventas.jsx":"11","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/AlertMessage.jsx":"12"},{"size":500,"mtime":1623033403422,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1623033403426,"results":"15","hashOfConfig":"14"},{"size":1283,"mtime":1623091047080,"results":"16","hashOfConfig":"14"},{"size":964,"mtime":1623091057972,"results":"17","hashOfConfig":"14"},{"size":1544,"mtime":1623081330302,"results":"18","hashOfConfig":"14"},{"size":1178,"mtime":1623081318362,"results":"19","hashOfConfig":"14"},{"size":3886,"mtime":1623096987635,"results":"20","hashOfConfig":"14"},{"size":496,"mtime":1623075635958,"results":"21","hashOfConfig":"14"},{"size":4865,"mtime":1623096828299,"results":"22","hashOfConfig":"14"},{"size":5306,"mtime":1623096978206,"results":"23","hashOfConfig":"14"},{"size":2054,"mtime":1623098036973,"results":"24","hashOfConfig":"14"},{"size":419,"mtime":1623093791809,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1atcs4l",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/index.js",[],["55","56"],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/reportWebVitals.js",[],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/App.js",[],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Navegation.jsx",[],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Body/Body.jsx",[],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Body/CardProduct.jsx",["57"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst CardProduct = ({name, image, description, link}) => {\n\n    const nombreHelado = {name};\n    const Card = styled.div`\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        min-width: 0;\n        word-wrap: break-word;\n        background-clip: border-box;\n        border: 1px solid rgba(0,0,0,.125);\n        border-radius: .25rem;\n        background-image: url(${image});\n        background-size:cover;\n        width: 100%;\n        height: 300px;\n        justify-content: center;\n        text-align: center;\n\n        ::before{\n            content: \"\";\n            width:100%;\n            height:100%;\n            background-color:snow;\n            position: absolute;\n            opacity: 0.5;\n        }\n\n        h3,a, p{\n            position:relative;\n        }\n        h3,p{\n            color:royalblue;\n        }\n    `;\n\n\n    return ( \n        <Card>\n            <h3>Pedi un {name}!</h3>\n            <p style={{fontWeight:\"bold\"}}>{description}</p>\n            <a className=\"linkStyle\" href={link}>Pedir ya!</a>\n        </Card>\n     );\n}\n \nexport default CardProduct;","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Helados/Cono.jsx",["58"],"import React, {useState} from 'react';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport Spinner from '../Spinner/Spinner';\nimport AlertMessage from '../AlertMessage';\n\n\nconst Cono = () => {\n\n    const background = {\n        backgroundColor: \"royalblue\"\n    }\n\n    const text = {\n        textAlign:\"center\",\n        color:\"snow\"\n    }\n\n    const labelPosition = {\n        color:\"snow\",\n        marginLeft:\"25%\"\n    }\n\n    const selectPosition = {\n        width:\"50%\",\n        marginLeft:\"25%\"\n    }\n\n    const buttonStyle = {\n        backgroundColor: \"snow\",\n        border: \"none\",\n        color: \"royalblue\",\n        padding: \"15px 32px\",\n        textAlign: \"center\",\n        textDecoration: \"none\",\n        display: \"inline-block\",\n        fontSize: \"16px\",\n        cursor: \"pointer\",\n        marginLeft:\"47%\",\n        marginBottom:\"10px\"\n    }\n\n\n    const sendOrder = (e) =>{\n        e.preventDefault();\n\n        const url = \"http://localhost:8080/venta/crearVenta\";\n\n        axios.post(url,{\n            tipoHelado:'Cono'\n        })\n        .then(res => {\n            console.log(res.data);\n            if(res.data === \"No hay cajeros disponibles\"){\n                saveError(true);\n            }else{\n                saveDeliver(res.data);\n            }\n        })\n        .catch(error => console.log(error));\n\n        \n        saveOrder(true);\n\n        setTimeout(()=>{\n\n            saveOrder(false);\n            saveAlert(true);\n\n        },2000);\n\n        setTimeout(()=>{\n\n            saveAlert(false);\n            saveError(false);\n\n        },5000);\n\n    }\n\n    const [orderPlaced, saveOrder] = useState(false);\n    const [alertBuy, saveAlert] = useState(false);\n    const [errorAlert, saveError] = useState(false);\n    const [deliver, saveDeliver] = useState({});\n\n\n    const imageStyle = {\n        width: \"200px\",\n        marginLeft: \"40%\",\n        marginBottom: \"10px\"\n    }\n\n\n\n    return ( \n        <div style={background}>\n            {alertBuy? errorAlert?<AlertMessage message=\"No se pudo concretar la compra, no hay cajeros disponibles.\"/>: <AlertMessage message=\"Se concretó la compra\"/> :null}\n            {orderPlaced ? <Spinner /> :\n            (\n                <React.Fragment>\n                    <h3 style={text}>Seleccioná los gustos!</h3>\n\n                    <Form.Group>\n                        <Form.Label style={labelPosition}>Elige el primer gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n                        <Form.Label style={labelPosition}>Elige el segundo gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <br/>\n                    <button \n                        style={buttonStyle}\n                        onClick={(e) => sendOrder(e)}\n                    >Pedir!</button>\n                    <br/>\n                    {deliver.nombreEmpleado?(\n                        <div>\n                            <h4 style={text}>Tu repartidor: {deliver.nombreEmpleado}</h4>\n                            <img style={imageStyle} src={deliver.fotoEmpleado}/>\n                        </div>\n                    ):null}\n                </React.Fragment>\n            )}\n        </div>\n     );\n}\n \nexport default Cono;","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Spinner/Spinner.jsx",[],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Helados/Cuarto.jsx",["59"],"import React, {useState} from 'react';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport Spinner from '../Spinner/Spinner';\nimport AlertMessage from '../AlertMessage';\n\n\nconst Cuarto = () => {\n\n    const background = {\n        backgroundColor: \"royalblue\"\n    }\n\n    const text = {\n        textAlign:\"center\",\n        color:\"snow\"\n    }\n\n    const labelPosition = {\n        color:\"snow\",\n        marginLeft:\"25%\"\n    }\n\n    const selectPosition = {\n        width:\"50%\",\n        marginLeft:\"25%\"\n    }\n\n    const buttonStyle = {\n        backgroundColor: \"snow\",\n        border: \"none\",\n        color: \"royalblue\",\n        padding: \"15px 32px\",\n        textAlign: \"center\",\n        textDecoration: \"none\",\n        display: \"inline-block\",\n        fontSize: \"16px\",\n        cursor: \"pointer\",\n        marginLeft:\"47%\",\n        marginBottom:\"10px\"\n    }\n\n    const sendOrder = (e) =>{\n        e.preventDefault();\n\n        const url = \"http://localhost:8080/venta/crearVenta\";\n\n        axios.post(url,{\n            tipoHelado:'1/4kg'\n        })\n        .then(res => {\n            console.log(res.data);\n            if(res.data === \"No hay cajeros disponibles\"){\n                saveError(true);\n            }else{\n                saveDeliver(res.data);\n            }\n        })\n        .catch(error => console.log(error));\n\n        \n        saveOrder(true);\n\n        setTimeout(()=>{\n\n            saveOrder(false);\n            saveAlert(true);\n\n        },2000);\n\n        setTimeout(()=>{\n\n            saveAlert(false);\n            saveError(false);\n\n        },5000);\n\n        console.log(deliver);\n\n    }\n\n    const [orderPlaced, saveOrder] = useState(false);\n    const [alertBuy, saveAlert] = useState(false);\n    const [errorAlert, saveError] = useState(false);\n    const [deliver, saveDeliver] = useState({});\n\n\n    const imageStyle = {\n        width: \"200px\",\n        marginLeft: \"40%\",\n        marginBottom: \"10px\"\n    }\n\n\n\n    return ( \n        <div style={background}>\n            {alertBuy? errorAlert?<AlertMessage message=\"No se pudo concretar la compra, no hay cajeros disponibles.\"/>: <AlertMessage message=\"Se concretó la compra\"/> :null}\n            {orderPlaced ? <Spinner /> :\n            (\n                <React.Fragment>\n                    <h3 style={text}>Seleccioná los gustos!</h3>\n\n                    <Form.Group>\n                        <Form.Label style={labelPosition}>Elige el primer gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n                        <Form.Label style={labelPosition}>Elige el segundo gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n                        <Form.Label style={labelPosition}>Elige el tercer gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n                        <Form.Label style={labelPosition}>Elige el plus! (Opcional)</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Ninguno</option>\n                            <option>Chocolate fundido</option>\n                            <option>Crema de vainilla</option>\n                            <option>Almendras</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <br/>\n                    <button \n                        style={buttonStyle}\n                        onClick={(e) => sendOrder(e)}\n                    >Pedir!</button>\n                    <br/>\n\n                    {deliver.nombreEmpleado?(\n                        <div>\n                            <h4 style={text}>Tu repartidor: {deliver.nombreEmpleado}</h4>\n                            <img style={imageStyle} src={deliver.fotoEmpleado}/>\n                        </div>\n                    ):null}\n                </React.Fragment>\n            )}\n        </div>\n     );\n}\n \nexport default Cuarto;","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Helados/Kilo.jsx",["60"],"import React, {useState} from 'react';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport Spinner from '../Spinner/Spinner';\nimport AlertMessage from '../AlertMessage';\n\n\nconst Cuarto = () => {\n\n    const background = {\n        backgroundColor: \"royalblue\"\n    }\n\n    const text = {\n        textAlign:\"center\",\n        color:\"snow\"\n    }\n\n    const labelPosition = {\n        color:\"snow\",\n        marginLeft:\"25%\"\n    }\n\n    const selectPosition = {\n        width:\"50%\",\n        marginLeft:\"25%\"\n    }\n\n    const buttonStyle = {\n        backgroundColor: \"snow\",\n        border: \"none\",\n        color: \"royalblue\",\n        padding: \"15px 32px\",\n        textAlign: \"center\",\n        textDecoration: \"none\",\n        display: \"inline-block\",\n        fontSize: \"16px\",\n        cursor: \"pointer\",\n        marginLeft:\"47%\",\n        marginBottom:\"10px\"\n    }\n\n\n    const sendOrder = (e) =>{\n        e.preventDefault();\n\n        const url = \"http://localhost:8080/venta/crearVenta\";\n\n        axios.post(url,{\n            tipoHelado:'kilo'\n        })\n        .then(res => {\n            console.log(res.data);\n            if(res.data === \"No hay cajeros disponibles\"){\n                saveError(true);\n            }else{\n                saveDeliver(res.data);\n            }\n        })\n        .catch(error => console.log(error));\n\n        \n        saveOrder(true);\n\n        setTimeout(()=>{\n\n            saveOrder(false);\n            saveAlert(true);\n\n        },2000);\n\n        setTimeout(()=>{\n\n            saveAlert(false);\n            saveError(false);\n\n        },5000);\n\n    }\n\n    const [orderPlaced, saveOrder] = useState(false);\n    const [alertBuy, saveAlert] = useState(false);\n    const [errorAlert, saveError] = useState(false);\n    const [deliver, saveDeliver] = useState({});\n\n\n    const imageStyle = {\n        width: \"200px\",\n        marginLeft: \"40%\",\n        marginBottom: \"10px\"\n    }\n\n\n\n    return ( \n        <div style={background}>\n            {alertBuy? errorAlert?<AlertMessage message=\"No se pudo concretar la compra, no hay cajeros disponibles.\"/>: <AlertMessage message=\"Se concretó la compra\"/> :null}\n            {orderPlaced ? <Spinner /> :\n            (\n                <React.Fragment>\n                    <h3 style={text}>Seleccioná los gustos!</h3>\n\n                    <Form.Group>\n                        <Form.Label style={labelPosition}>Elige el primer gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n\n                        <Form.Label style={labelPosition}>Elige el segundo gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n\n                        <Form.Label style={labelPosition}>Elige el tercer gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n\n                        <br/>\n                        <Form.Label style={labelPosition}>Elige el cuarto gusto!</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Chocolate</option>\n                            <option>Vainilla</option>\n                            <option>Crema americana</option>\n                            <option>Dulce de leche</option>\n                        </Form.Control>\n                        <br/>\n\n                        <Form.Label style={labelPosition}>Elige el plus! (Opcional)</Form.Label>\n                        <Form.Control as=\"select\" style={selectPosition}>\n                            <option>Ninguno</option>\n                            <option>Chocolate fundido</option>\n                            <option>Crema de vainilla</option>\n                            <option>Almendras</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <br/>\n                    <button \n                        style={buttonStyle}\n                        onClick={(e) => sendOrder(e)}\n                    >Pedir!</button>\n                    <br/>\n\n                    {deliver.nombreEmpleado?(\n                        <div>\n                            <h4 style={text}>Tu repartidor: {deliver.nombreEmpleado}</h4>\n                            <img style={imageStyle} src={deliver.fotoEmpleado}/>\n                        </div>\n                    ):null}\n                </React.Fragment>\n            )}\n        </div>\n     );\n}\n \nexport default Cuarto;","/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/Ventas.jsx",[],"/home/gianfranco/Desktop/LAB/Neorelli/neorelli/src/components/AlertMessage.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":6,"column":11,"nodeType":"67","messageId":"68","endLine":6,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":129,"column":29,"nodeType":"71","endLine":129,"endColumn":81},{"ruleId":"69","severity":1,"message":"70","line":147,"column":29,"nodeType":"71","endLine":147,"endColumn":81},{"ruleId":"69","severity":1,"message":"70","line":158,"column":29,"nodeType":"71","endLine":158,"endColumn":81},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'nombreHelado' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]